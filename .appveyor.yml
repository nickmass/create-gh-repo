platform: x64
install:
    - ps: Start-FileDownload "https://static.rust-lang.org/dist/rust-nightly-x86_64-pc-windows-gnu.msi"
    - msiexec /a rust-nightly-x86_64-pc-windows-gnu.msi TARGETDIR="C:\Rust" /norestart /qb
    - choco install msys2 > nul
    - RefreshEnv
    - SET PATH=%PATH%;C:\Rust\Rust\bin
    - SET MSYS2_ROOT=C:\tools\msys64
    - msystem.bat MSYS
    - pacman --noconfirm -S mingw-w64-x86_64-gcc
    - pacman --noconfirm -S mingw-w64-x86_64-toolchain
    - msystem.bat /D
    - msystem.bat MINGW64
    - SET MING_BIN_DIR=C:\Tools\msys64\mingw64\bin
    - copy %MING_BIN_DIR%\mingw32-make.exe %MING_BIN_DIR%\make.exe
    - rustc -V
    - cargo -V
build_script:
    - cargo build --verbose
test_script:
    - cargo test --verbose
    - cargo run -- --help
after_build:
    - SET RELEASE_ARCHIVE=create-gh-repo-win-%APPVEYOR_REPO_TAG_NAME%.zip
    - SET OPENSSL64_DIR=C:\OpenSSL-Win64\bin
    - IF %APPVEYOR_REPO_TAG% EQU true cargo build --release
    - IF %APPVEYOR_REPO_TAG% EQU true dir target\release
    - IF %APPVEYOR_REPO_TAG% EQU true 7z a %RELEASE_ARCHIVE% %APPVEYOR_BUILD_FOLDER%\target\release\create_gh_repo.exe
    - IF %APPVEYOR_REPO_TAG% EQU true 7z a %RELEASE_ARCHIVE% %MING_BIN_DIR%\zlib1.dll
    - IF %APPVEYOR_REPO_TAG% EQU true 7z a %RELEASE_ARCHIVE% %OPENSSL64_DIR%\ssleay32.dll
    - IF %APPVEYOR_REPO_TAG% EQU true 7z a %RELEASE_ARCHIVE% %OPENSSL64_DIR%\libeay32.dll
artifacts:
    - path: create-gh-repo-win-*.zip
      name: release
deploy:
    release: $(appveyor_repo_tag_name)
    description: "Release $(appveyor_repo_tag_name)"
    provider: GitHub
    auth_token:
        secure: RT2z44BsBy0A/5TLqTBV9bUKamA8My702nhJOGpHy7zup9nOSCCWzI1+PZzr2Wqh
    artifact: release
    force_update: true
    on:
        branch: master
        appveyor_repo_tag: true


